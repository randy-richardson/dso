<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.terracotta</groupId>
    <artifactId>terracotta-root</artifactId>
    <version>4.3.10.10.6</version>
    <relativePath>..</relativePath>
  </parent>
  <artifactId>system-tests-parent</artifactId>
  <packaging>pom</packaging>
  <name>System Tests Parent</name>
  <description>Parent POM for system tests</description>
  <licenses>
    <license>
      <name>Terracotta Public License</name>
      <url>http://www.terracotta.org/license.txt</url>
    </license>
  </licenses>
  <properties>
    <tcmaven.version>2.1.0</tcmaven.version>
    <terracotta.core.version>4.3.10.10.6</terracotta.core.version>
    <tc.core.groupId>org.terracotta</tc.core.groupId>
    <tc.core.artifactId>terracotta</tc.core.artifactId>
    <tc.management.war.groupId>org.terracotta</tc.management.war.groupId>
    <tc.management.war.artifactId>management-tsa-war</tc.management.war.artifactId>
    <productKeyPath/>
    <ee.license>-Dcom.tc.productkey.path=${productKeyPath}</ee.license>
    <container-test-framework.version>3.0.4</container-test-framework.version>
    <tc.tests.configuration.properties.file>${project.build.testOutputDirectory}/tc.tests.properties</tc.tests.configuration.properties.file>
    <tc.system.tests.properties>${project.build.testOutputDirectory}/com/tc/properties/tests.properties</tc.system.tests.properties>
    <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
    <groovy.version>2.5.8</groovy.version>
    <cargo-maven2-plugin.version>1.7.11</cargo-maven2-plugin.version>
    <tc.linked-child-process.version>1.0.17</tc.linked-child-process.version>
    <maven-appserver-plugin.version>1.0.5</maven-appserver-plugin.version>
    <tc.config>-Dtc.config=tc-config.xml</tc.config>
    <tc.base-dir>${project.build.directory}</tc.base-dir>
    <tc.dso.globalmode>false</tc.dso.globalmode>
    <tc.tests.info.property-files>${tc.tests.configuration.properties.file}</tc.tests.info.property-files>
    <tc.tests.info.temp-root>${project.build.directory}/temp</tc.tests.info.temp-root>
    <tc.tests.info.data-root>${project.build.directory}/data</tc.tests.info.data-root>
    <tc.tests.info.linked-child-process-classpath>${localMavenRepository}/org/terracotta/linked-child-process/${tc.linked-child-process.version}/linked-child-process-${tc.linked-child-process.version}.jar</tc.tests.info.linked-child-process-classpath>
    <tc.tests.info.junit-test-timeout-inseconds>1800</tc.tests.info.junit-test-timeout-inseconds>
    <absolute-test-timeout-secs>${tc.tests.info.junit-test-timeout-inseconds}</absolute-test-timeout-secs>
    <tc.tests.info.l2.startup.mode>internal</tc.tests.info.l2.startup.mode>
    <surefire.min-memory>64m</surefire.min-memory>
    <surefire.max-memory>1g</surefire.max-memory>
    <surefire.additional-jvm-args/>
    <surefire.additional-jvm-module-args/>
    <surefire.argLine>-server -Xms${surefire.min-memory} -Xmx${surefire.max-memory} ${surefire.additional-jvm-module-args} ${surefire.additional-jvm-args} -Dtc.base-dir=${tc.base-dir} ${tc.config} -Dtc.dso.globalmode=${tc.dso.globalmode} -Dtc.tests.info.property-files=${tc.tests.info.property-files} -Dcom.tc.properties=${tc.system.tests.properties} -Dcom.sun.management.jmxremote ${ee.license}</surefire.argLine>
    <skipTests>true</skipTests>
    <localMavenRepository>${user.home}/.m2/repository</localMavenRepository>
    <os-classifier>linux</os-classifier>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>terracotta</artifactId>
        <version>${terracotta.core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.terracottatech</groupId>
        <artifactId>terracotta-ee</artifactId>
        <version>${terracotta.core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>linked-child-process</artifactId>
        <version>${tc.linked-child-process.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta.test</groupId>
        <artifactId>container-test-framework</artifactId>
        <version>${container-test-framework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta.test</groupId>
        <artifactId>test-framework</artifactId>
        <version>${terracotta.core.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>${tc.core.groupId}</groupId>
      <artifactId>${tc.core.artifactId}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.terracotta</groupId>
      <artifactId>linked-child-process</artifactId>
    </dependency>
    <dependency>
      <groupId>org.terracotta.test</groupId>
      <artifactId>test-framework</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.terracotta.junit</groupId>
      <artifactId>test-listeners</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
      <testResource>
        <directory>src/test/filtered-resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>${cargo-maven2-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.terracotta</groupId>
          <artifactId>maven-forge-plugin</artifactId>
          <version>${maven-forge-plugin.version}</version>
          <configuration>
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <printSummary>true</printSummary>
            <forkedProcessTimeoutInSeconds>${absolute-test-timeout-secs}</forkedProcessTimeoutInSeconds>
            <useSystemClassLoader>true</useSystemClassLoader>
            <workingDirectory>${project.build.directory}</workingDirectory>
            <argLine>${surefire.argLine}</argLine>
            <excludes>
              <exclude>**/Abstract*.java</exclude>
            </excludes>
            <properties>
              <property>
                <name>listener</name>
                <value>net.sf.ehcache.SystemExitListener</value>
              </property>
            </properties>
          </configuration>
          <executions>
            <execution>
              <id>setl2classpath</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>setl2classpath</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>groovy-maven-plugin</artifactId>
          <version>${groovy-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>generate-test-properties</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <source>
                  Properties outputProperties = new Properties()
                  properties.each { key, value -&gt;
                    if (key.startsWith("tc.tests")) {
                      outputProperties.setProperty(key, value)
                    }
                  }

                  String propertiesFileName = properties.getProperty(
                      "tc.tests.configuration.properties.file")
                  File propertiesFile = new File(propertiesFileName)
                  assert !propertiesFile.isDirectory()
                  propertiesFile.parentFile.mkdirs()
                  def outputStream = new FileOutputStream(propertiesFile)
                  try {
                    outputProperties.store(outputStream, "")
                  }
                  finally {
                    outputStream.close()
                  }
                  </source>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
          <executions>
            <execution>
              <id>build-full-classpath</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>build-classpath</goal>
              </goals>
              <configuration>
                <outputFile>${project.build.directory}/classpath.txt</outputFile>
              </configuration>
            </execution>
            <execution>
              <id>build-compile-classpath</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>build-classpath</goal>
              </goals>
              <configuration>
                <includeScope>compile</includeScope>
                <outputFile>${project.build.directory}/compile-classpath.txt</outputFile>
              </configuration>
            </execution>
            <execution>
              <id>build-test-classpath</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>build-classpath</goal>
              </goals>
              <configuration>
                <includeScope>test</includeScope>
                <outputFile>${project.build.directory}/test-classpath.txt</outputFile>
              </configuration>
            </execution>
            <execution>
              <id>build-runtime-classpath</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>build-classpath</goal>
              </goals>
              <configuration>
                <includeScope>runtime</includeScope>
                <outputFile>${project.build.directory}/runtime-classpath.txt</outputFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <groupId>org.terracotta</groupId>
            <artifactId>system-test-parent</artifactId>
            <version>${project.version}</version>
            <packaging>pom</packaging>
            <file>${basedir}/pom.xml</file>
            <generatePom>false</generatePom>
          </configuration>
          <executions>
            <execution>
              <id>install-jar-lib</id>
              <goals>
                <goal>install-file</goal>
              </goals>
              <phase>validate</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2</version>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>system-tests</id>
      <properties>
        <skipTests>false</skipTests>
      </properties>
    </profile>
    <profile>
      <id>workaround-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <localMavenRepository>C:\DOCUME~1\${user.name}\.m2\repository</localMavenRepository>
        <os-classifier>windows</os-classifier>
      </properties>
    </profile>
    <profile>
      <id>ee</id>
      <properties>
        <tc.core.groupId>com.terracottatech</tc.core.groupId>
        <tc.core.artifactId>terracotta-ee</tc.core.artifactId>
        <tc.management.war.groupId>com.terracottatech</tc.management.war.groupId>
        <tc.management.war.artifactId>ent-management-tsa-war</tc.management.war.artifactId>
      </properties>
    </profile>
    <profile>
      <id>check-short</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.terracotta</groupId>
            <artifactId>maven-forge-plugin</artifactId>
            <configuration>
              <useReflectionFile>true</useReflectionFile>
              <groups>org.terracotta.test.categories.CheckShorts</groups>
              <failIfNoTests>false</failIfNoTests>
              <printSummary>true</printSummary>
              <reportFormat>plain</reportFormat>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>single-server</id>
      <properties>
        <tc.tests.info.standalone>true</tc.tests.info.standalone>
        <tc.tests.info.tsa.port>9910</tc.tests.info.tsa.port>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.terracotta.maven.plugins</groupId>
            <artifactId>tc-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>server1start</id>
                <phase>pre-integration-test</phase>
                <configuration>
                  <serverName>Server1</serverName>
                  <config>${project.build.directory}/test-classes/tc-config-single-server.xml</config>
                  <jvmargs>-Dlogs.path=${project.build.directory}/temp -Xms1g -Xmx1g</jvmargs>
                </configuration>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>server1stop</id>
                <phase>post-integration-test</phase>
                <configuration>
                  <serverName>Server1</serverName>
                  <config>${project.build.directory}/test-classes/tc-config-single-server.xml</config>
                  <jvmargs>-Dlogs.path=${project.build.directory}/temp -Xms1g -Xmx1g</jvmargs>
                </configuration>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <startServer>false</startServer>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.terracotta</groupId>
            <artifactId>maven-forge-plugin</artifactId>
            <configuration>
              <groups>org.terracotta.test.categories.SingleServer</groups>
              <failIfNoTests>false</failIfNoTests>
              <printSummary>true</printSummary>
              <reportFormat>plain</reportFormat>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>container-tests</id>
      <activation>
        <property>
          <name>appserver</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.terracotta.test</groupId>
          <artifactId>websphere-profiles</artifactId>
          <classifier>${os-classifier}</classifier>
          <version>1.0</version>
          <type>tar.gz</type>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <version>${groovy-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>modify-websphere-tests-timeout</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    import org.apache.maven.artifact.Artifact
                    if (project.properties['appserver'] =~ /websphere/) {
                      project.properties.setProperty('tc.tests.info.junit-test-timeout-inseconds', '2700')
                      project.properties.setProperty('absolute-test-timeout-secs', '2700')
                      def cacheDir = System.getProperty("user.home") + File.separator + ".tc"
                      if (System.getProperty("os.name") =~ /Windows/) {
                        cacheDir = "c:/temp"
                      }
                      def cacheVersion = "unknown"
                      def artifactVersionFile = new File(cacheDir, "websphere-profiles.version")
                      if (artifactVersionFile.exists()) {
                        cacheVersion = artifactVersionFile.text
                      }                        
                      for (def a : project.getArtifacts()) {
                        if (a.artifactId == "websphere-profiles" &amp;&amp; !cacheVersion.equals(a.version)) {
                          ant.untar(src: a.getFile(), dest: cacheDir, compression: "gzip")
                          artifactVersionFile.write(a.version)
                        }
                      }
                    }
                    
                  </source>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.terracotta.plugin</groupId>
            <artifactId>maven-appserver-plugin</artifactId>
            <version>${maven-appserver-plugin.version}</version>
            <executions>
              <execution>
                <id>install-appserver</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>setup</goal>
                </goals>
                <configuration>
                  <url>
                    <param>http://download.terracotta.org/appservers</param>
                    <param>http://sfo-c64-jenkins-tools-001.eur.ad.sag/resources/appservers</param>
                  </url>
                  <testPropertiesFile>${tc.tests.configuration.properties.file}</testPropertiesFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>run-test-group</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.terracotta</groupId>
            <artifactId>maven-forge-plugin</artifactId>
            <configuration>
              <printSummary>true</printSummary>
              <reportFormat>plain</reportFormat>
              <excludes>
                <exclude>**/Abstract*.java</exclude>
              </excludes>
              <includes>
                <include>**/${testGroup}/*Test.java</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>client-jvm</id>
      <properties>
        <surefire.jvm.mode>-client</surefire.jvm.mode>
      </properties>
    </profile>
    <profile>
      <id>server-jvm</id>
      <properties>
        <surefire.jvm.mode>-server</surefire.jvm.mode>
      </properties>
    </profile>
  </profiles>
</project>
